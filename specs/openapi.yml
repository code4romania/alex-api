openapi: '3.0.2'
info:
  title: ALEX API
  version: 1.0.0
  description: ALEX API consumed by ALEX clients.
servers:
  - url: '{server}'
    variables:
      server:
        default: https://api.alex.test
paths:
  /v1/hc:
    get:
      operationId: getHC
      summary: Health check endpoint.
      description: Health check endpoint. 
      tags:
        - "health-check"
      responses:
        '200':
          description: Response is OK on API running and reachable.
        # Common responses
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /v1/accounts:
    get:
      operationId: getAccounts
      summary: Gets accounts' list.
      description: Gets accounts' list based on search filter.
      tags:
        - "accounts"
        - "list"
      parameters:
        - in: query
          name: q
          schema:
            type: string
          required: false
          description: >
            Search parameter is used to filter accounts using IBAN, alias and short IBAN.
            If no account matches search criteria then an empty array is returned.
        # Common search query parameters.
        - $ref: "./parameters/common-sort-parameter.yml"
        - $ref: "./parameters/common-skip-parameter.yml"
        - $ref: "./parameters/common-top-parameter.yml"
      responses:
        '200':
          description: Gets accounts' list.
          content:
            application/json:
              schema:
                type: array
                $ref: "./schemas/account.yml"
        # Common responses
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      operationId: createAccount    
      summary: Create account.
      description: Creates an account.
      tags:
        - "accounts"
        - "create"
      requestBody:
        description: New account data.
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/account.yml"
      responses:
        '201':
          $ref: '#/components/responses/Created'
        # Common responses
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /v1/accounts/{id}:
    get:
      operationId: getAccount
      summary: Gets account.
      description: Gets single account based on ID.
      tags:
        - "accounts"
      parameters:
        - $ref: "./parameters/account-id-parameter.yml"
      responses:
        '200':
          description: Gets specified account.
          content:
            application/json:
              schema:
                $ref: "./schemas/account.yml"
        '404':
          $ref: '#/components/responses/NotFound'
        # Common responses
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    put:
      operationId: updateAccount
      summary: Update account.
      description: Updates an account.
      tags:
        - "accounts"
        - "update"
      parameters:
        - $ref: "./parameters/account-id-parameter.yml"
      requestBody:
        description: Account data.
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/account-update.yml"
      responses:
        '204':
          description: Updated
        # Common responses
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      operationId: deleteAccount
      summary: Delete account.
      description: Deletes an account.
      tags:
        - "accounts"
        - "delete"
      parameters:
        - $ref: "./parameters/account-id-parameter.yml"
      responses:
        '200':
          description: OK
        # Common responses
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Created:
      description: Created.
      content:
        text/plain:
          schema:
            properties:
              id:
                type: string
    InvalidOperation:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: "./schemas/common-result-message.yml"
    UnauthorizedError:
      description: Access token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: "./schemas/common-result-message.yml"
    NotFound:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: "./schemas/common-result-message.yml"
security:
  - bearerAuth: []
