openapi: 3.0.3
info:
  title: ALEX API
  version: 1.0.0
  description: ALEX API consumed by ALEX clients.
servers:
  - url: '{server}/api'
    variables:
      server:
        default: 'https://alex.test'
paths:
  /v1/hc:
    get:
      operationId: getHC
      summary: Health check endpoint.
      description: Health check endpoint.
      tags:
        - health-check
      responses:
        '200':
          description: Response is OK on API running and reachable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultMessageDTO'
              examples:
                sample-info:
                  value:
                    level: info
                    message: HEALTHY
                    fields: []
                sample-warn:
                  value:
                    level: warn
                    message: HEALTHY
                    fields: []
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /v1/accounts:
    get:
      operationId: getAccounts
      summary: Gets accounts' list.
      description: Gets accounts' list based on search filter.
      tags:
        - accounts
        - list
      parameters:
        - in: query
          name: q
          schema:
            type: string
          required: false
          description: |
            Search parameter is used to filter accounts using IBAN, alias and short IBAN. If no account matches search criteria then an empty array is returned.
        - $ref: '#/components/parameters/CommonSortParameter'
        - $ref: '#/components/parameters/CommonSkipParameter'
        - $ref: '#/components/parameters/CommonTopParameter'
      responses:
        '200':
          description: Gets accounts' list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'
              examples:
                sample:
                  value:
                    - alias: my-main-ccy
                      IBAN: RO49AAAA1B31007593840000
                      shortIBAN: 49-9384
                      isCash: false
                    - alias: my-other-ccy
                      IBAN: RO51AAAA1B31007593840000
                      shortIBAN: 51-9384
                      isCash: false
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      operationId: createAccount
      summary: Create account.
      description: Creates an account.
      tags:
        - accounts
        - create
      parameters:
        - in: header
          name: X-CSO-ID
          schema:
            type: string
            required: false
      requestBody:
        description: New account data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDTO'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/v1/accounts/{id}':
    get:
      operationId: getAccount
      summary: Gets account.
      description: Gets single account based on ID.
      tags:
        - accounts
      parameters:
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          description: Gets specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
              examples:
                sample:
                  value:
                    alias: my-main-ccy
                    IBAN: RO49AAAA1B31007593840000
                    shortIBAN: 49-9384
                    isCash: false
                sample-other:
                  value:
                    alias: my-main-ccy
                    IBAN: RO51AAAA1B31007593840000
                    shortIBAN: 51-9384
                    isCash: false
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      operationId: updateAccount
      summary: Update account.
      description: Updates an account.
      tags:
        - accounts
        - update
      parameters:
        - $ref: '#/components/parameters/AccountIdParameter'
      requestBody:
        description: Account data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDTO'
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      operationId: deleteAccount
      summary: Delete account.
      description: Deletes an account.
      tags:
        - accounts
        - delete
      parameters:
        - $ref: '#/components/parameters/AccountIdParameter'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /v1/cso:
    post:
      operationId: createCSO
      summary: Creates a new CSO
      description: Creates a new CSO entity
      tags:
        - cso
      requestBody:
        description: New CSO data.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsoDTO'
      responses:
        '201':
          description: Created.
          content:
            text/plain:
              schema:
                properties:
                  id:
                    type: string
              examples:
                account-created:
                  value:
                    id: RO49AAAA1B31007593840000
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  '/v1/cso/{id}':
    get:
      operationId: getCso
      summary: Gets a CSO based on id
      description: Gets a CSO based on Id
      tags:
        - cso
        - get
      parameters:
        - $ref: '#/components/parameters/IdParameter'
      responses:
        '200':
          description: Gets specified account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsoDTO'
              examples:
                sample:
                  value:
                    name: Code4Romania
                    fiscalIdentificationNumber: 123456
                    registryNumber: g64bncd73
                    legalRepresentativeName: Bogdan Ivan
        '400':
          $ref: '#/components/responses/InvalidOperation'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    AccountDTO:
      type: object
      title: AccountDTO
      required:
        - iban
      properties:
        alias:
          type: string
        iban:
          type: string
        shortIBAN:
          type: string
        isCash:
          type: boolean
    AccountUpdateDTO:
      type: object
      title: AccountUpdateDTO
      properties:
        alias:
          type: string
        shortIBAN:
          type: string
        isCash:
          type: boolean
    ResultMessageDTO:
      type: object
      title: ResponseDTO
      description: Error message DTO.
      properties:
        level:
          type: string
          enum:
            - debug
            - info
            - warn
            - error
          description: Message error level.
        message:
          type: string
          description: Message contents.
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ResultMessageFieldDTO'
    ResultMessageFieldDTO:
      type: object
      title: ResponseFieldDTO
      description: Field error message DTO.
      properties:
        name:
          type: string
          description: DTO field name that contains the method.
        level:
          type: string
          enum:
            - debug
            - info
            - warn
            - error
          description: Message error level.
        message:
          type: string
          description: Message contents.
    CsoDTO:
      type: object
      title: CsoDTO
      required:
        - name
      properties:
        name:
          type: string
        fiscalIdentificationNumber:
          type: string
        registryNumber:
          type: string
        legalRepresentativeName:
          type: string
        legalRepresentativePhone:
          type: telephone
        legalRepresentativeEmail:
          type: email
        legalRepresentativeAddress:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    AccountIdParameter:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID parameter should represent the IBAN of the account.
    CommonSkipParameter:
      in: query
      name: skip
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
      required: false
      description: |
        Number of items to skip.
    CommonSortParameter:
      in: query
      name: sort
      schema:
        type: string
        enum:
          - asc
          - desc
        default: asc
      required: false
      description: |
        Specifies sort direction.
    CommonTopParameter:
      in: query
      name: top
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        default: 10
      required: false
      description: |
        Number of items to return.
    IdParameter:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: Identifier for e
  responses:
    Created:
      description: Created.
      content:
        text/plain:
          schema:
            properties:
              id:
                type: string
          examples:
            account-created:
              value:
                id: RO49AAAA1B31007593840000
    InvalidOperation:
      description: Bad request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultMessageDTO'
          examples:
            account-invalid:
              value:
                level: error
                message: Multiple validation errors!
                fields:
                  - name: IBAN
                    level: error
                    message: IBAN is not valid format!
                  - name: Alias
                    level: warning
                    message: Alias is empty!
    UnauthorizedError:
      description: Access token is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultMessageDTO'
          examples:
            unauthorized:
              value:
                level: error
                message: Unauthorized to perform this action!
                fields: []
    NotFound:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResultMessageDTO'
          example:
            not-found:
              value:
                level: error
                message: Item not found!
                fields: []
security:
  - bearerAuth: []
