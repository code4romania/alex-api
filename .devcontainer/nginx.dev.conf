upstream alex_idp {
  server alex-idp:8080;
}
# upstream alex_api {
#   server alex-api:5000;
# }
server {
    listen 80;
    server_name alex.local;
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    listen 443 ssl;
    server_name alex.local;
    ssl_certificate /etc/nginx/certs/alex.local.crt;
    ssl_certificate_key /etc/nginx/certs/alex.local.key;
    location /auth/ {
          proxy_pass "http://alex_idp/auth/";
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
    }
    location /auth/admin {
          proxy_pass "http://alex_idp/auth/admin";
          proxy_set_header   Host $host;
          proxy_set_header   X-Real-IP $remote_addr;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Host $server_name;
    }
    # location /api/ {
    #       proxy_pass "http://alex_api/api/";
    #       proxy_set_header   Host $host;
    #       proxy_set_header   X-Real-IP $remote_addr;
    #       proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #       proxy_set_header   X-Forwarded-Host $server_name;
    # }
}
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;
ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";